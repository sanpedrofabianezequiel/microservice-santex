name: business-node-deploy

on:
  push:
    branches:
      - master
      - dev

jobs:
  deploy:
    name: business-node-deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:

    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install serverless globally
      run: npm install -g serverless

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install npm Dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: npm ci

    - name: nest build
      run: npm run build
    
    - name: Get current branch name
      shell: bash
      id: extract_branch
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

    - name: Deploy lambda function
      run: |
        if [ ${{ steps.extract_branch.outputs.branch }} == "dev" ]; then
          sls deploy --stage dev
        else
          sls deploy --stage production
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}